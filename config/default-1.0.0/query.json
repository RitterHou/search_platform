{
  "chain": [
    {
      "name": "trades_bills_query",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "^scene/acct/trades/bills$",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/acct/trades/bills"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "acct-trades-bills",
        "type": "bills",
        "id": "{fundsId}"
      },
      "response": {}
    },
    {
      "name": "yun_product_query",
      "res_type": "product",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^products/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/products/(?!(gonghuo|store))[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "products/(?P<adminId>[\\d\\D]+)",
          "ids": "ids=(?P<ids>[\\d\\D]+?);",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "product_vip",
              "id": "{skuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "product_experience",
              "id": "{skuId}",
              "tag": "default"
            }
          ]
        }
      },
      "response": {}
    },
    {
      "name": "yun_spu_query",
      "res_type": "product",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^spus/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/spus/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "spus/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu_vip",
              "id": "{spuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "spu_experience",
              "id": "{spuId}",
              "tag": "default"
            }
          ]
        }
      },
      "response": {}
    },
    {
      "name": "yun_product_aggregation",
      "res_type": "aggregation",
      "http_method": "GET",
      "url_format": "^aggregations/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/aggregations/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "aggregations/(?P<adminId>[\\d\\D]+)",
          "ids": "ids=(?P<ids>[\\d\\D]+?);",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "product_vip",
              "id": "{skuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "product_experience",
              "id": "{skuId}",
              "tag": "default"
            }
          ]
        }
      },
      "response": {}
    },
    {
      "name": "yun_spu_aggregation",
      "res_type": "aggregation",
      "http_method": "GET",
      "url_format": "^spu_aggregations/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/spu_aggregations/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "spu_aggregations/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu_vip",
              "id": "{spuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "spu_experience",
              "id": "{spuId}",
              "tag": "default"
            }
          ]
        }
      }
    },
    {
      "name": "yun_product_suggest",
      "res_type": "suggest",
      "http_method": "GET",
      "url_format": "^suggests/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/suggests/[^/]+$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "suggests/(?P<adminId>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "suggest_vip"
      },
      "response": {
        "json": {
          "format": "json",
          "data_parser": {
            "language": "python",
            "script": "script.python.data_parser"
          }
        }
      }
    },
    {
      "name": "yun_product_search",
      "res_type": "search",
      "http_method": "GET",
      "url_format": "^search/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/search/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "search/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "product_vip",
              "id": "{skuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "product_experience",
              "id": "{skuId}",
              "tag": "default"
            }
          ]
        }
      },
      "response": {}
    },
    {
      "name": "yun_spu_search",
      "res_type": "search",
      "http_method": "GET",
      "url_format": "^spu_search/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/spu_search/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "spu_search/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu_vip",
              "id": "{spuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "spu_experience",
              "id": "{spuId}",
              "tag": "default"
            }
          ]
        }
      },
      "response": {}
    },
    {
      "name": "stats_search",
      "res_type": "measure",
      "http_method": "GET",
      "url_format": "^stats/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/stats/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "index": "stats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)",
          "task_name": "stats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)"
        }
      }
    },
    {
      "name": "exstats_search",
      "res_type": "ex_measure",
      "http_method": "GET",
      "url_format": "^exstats/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/exstats/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "index": "exstats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)",
          "task_name": "exstats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)"
        }
      }
    },
    {
      "name": "ex_suggest",
      "res_type": "ex_suggest",
      "http_method": "GET",
      "url_format": "^suggests/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/suggests/[\\d\\D]+?/scenes/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "/suggests/(?P<adminId>[\\d\\D]+?)/scenes",
          "scene": "/scenes/(?P<scene>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "suggest_vip"
      }
    },
    {
      "name": "recommendation",
      "res_type": "recommendation",
      "http_method": "GET",
      "url_format": "^recommendations/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/recommendations/[\\d\\D]+?/scenes/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "/recommendations/(?P<adminId>[\\d\\D]+?)/scenes",
          "scene": "/scenes/(?P<scene>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "product_vip",
              "id": "{skuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "product_experience",
              "id": "{skuId}",
              "tag": "default"
            }
          ]
        }
      }
    },
    {
      "name": "cloudshop_marketing_query",
      "res_type": "default",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^cloudshop/marketings/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/cloudshop/marketings/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/(?P<adminId>[^/]+)",
          "id": "marketings/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "cloudshop-marketing-{hashcode}-{version}",
        "type": "Marketing",
        "id": "{marketingId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "billstock_basic_query",
      "res_type": "default",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^billstock/[\\d\\D]+?/basic[\\d\\D]*",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/billstock/[^/]+?/basic"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "billstock/(?P<adminId>[^/]+)/basic",
          "id": "/basic/[^/]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "billstock-{version}",
        "type": "basic",
        "id": "{billId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "billstock_detail_query",
      "res_type": "default",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^billstock/[\\d\\D]+?/detail[\\d\\D]*",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/billstock/[\\d\\D]+?/detail"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "billstock/(?P<adminId>[^/]+)/detail",
          "id": "/detail/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "billstock-{version}",
        "type": "detail",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "open_api_qmcs_log",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^openapi/logs/qmcs$",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/openapi/logs/qmcs"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "openapi-srvlog-*",
        "type": "SRV_LOG",
        "host": "{log_es_host}",
        "id": "generate"
      },
      "response": {}
    },
    {
      "name": "d2c_service_log",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^d2c/logs/service$",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/d2c/logs/service"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "d2c-srvlog",
        "type": "SRV_LOG",
        "host": "{log_es_host}",
        "id": "generate"
      },
      "response": {}
    },
    {
      "name": "marketing_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/marketings/(?!(items|trades|usercoupons|fans|integral))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/(?P<adminId>[^/]+)",
          "id": "marketings/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "marketing-{hashcode}-{version}",
        "type": "Marketing",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "marketing_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/marketings/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/items/(?P<adminId>[^/]+)",
          "id": "marketings/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "marketing-item-{hashcode}-{version}",
        "type": "Item",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "marketing_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/marketings/trades/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/trades/(?P<adminId>[^/]+)",
          "id": "marketings/trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "marketing-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{tid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "marketing_usercoupon_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/usercoupons/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/marketings/usercoupons/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/usercoupons/(?P<adminId>[^/]+)",
          "id": "marketings/usercoupons/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "marketing-usercoupon-{hashcode}-{version}",
        "type": "Coupon",
        "id": "{couponId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "marketing_fans_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/fans/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/marketings/fans/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/fans/(?P<adminId>[^/]+)",
          "id": "marketings/fans/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "marketing-fans-{hashcode}-{version}",
        "type": "Fans",
        "id": "{openId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "marketing_integral_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/integral/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/marketings/integral/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/integral/items/(?P<adminId>[^/]+)",
          "id": "marketings/integral/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "marketing-integral-items-{hashcode}-{version}",
        "type": "Item",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "scene/d2c/trades/(?!(items|applies|refund_receipts|return_receipts|cash|ship_receipts|receive_receipts))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "trades/(?P<adminId>[^/]+)",
          "id": "trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{tid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/items/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-item-{hashcode}-{version}",
        "type": "Item",
        "id": "{oid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_application_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/applies/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/applies/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/applies/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/applies/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-application-{hashcode}-{version}",
        "type": "Application",
        "id": "{applyId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_refunded_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/refund_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/refund_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/refund_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/refund_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-refunded-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_returned_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/return_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/return_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/return_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/return_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-returned-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_ship_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/ship_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/ship_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/ship_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/ship_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-ship-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_receive_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/receive_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/receive_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/receive_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/receive_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-receive-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2p_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2p/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "scene/d2p/trades/(?!(items|applications|refunded_receipts|returned_receipts))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "trades/(?P<adminId>[^/]+)",
          "id": "trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2p-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2p_trade_returned_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2p/trades/returned_receipts/[\\w]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "scene/d2p/trades/returned_receipts"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "trades/returned_receipts/(?P<adminId>[^/]+)",
          "id": "trades/returned_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2p-trade-returned-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_cash_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/cash/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "scene/d2c/cash/trades/(?!(items|refund_receipts|return_receipts))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/cash/trades/(?P<adminId>[^/]+)",
          "id": "scene/d2c/cash/trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-cash-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{tid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_cash_trade_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/cash/trades/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/cash/trades/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/cash/trades/items/(?P<adminId>[^/]+)",
          "id": "scene/d2c/cash/trades/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-cash-trade-item-{hashcode}-{version}",
        "type": "Item",
        "id": "{oid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_cash_trade_return_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/cash/trades/return_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/cash/trades/return_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/cash/trades/return_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/cash/trades/return_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-cash-trade-returned-{hashcode}-{version}",
        "type": "Item",
        "id": "{retTid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_cash_trade_refund_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/cash/trades/refund_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/cash/trades/refund_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/cash/trades/refund_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/cash/trades/refund_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-cash-trade-refunded-{hashcode}-{version}",
        "type": "Item",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "scene/consignment/trades/(?!(items|applies|refund_receipts|return_receipts|cash|ship_receipts|receive_receipts))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "trades/(?P<adminId>[^/]+)",
          "id": "trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{tid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/items/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-item-{hashcode}-{version}",
        "type": "Item",
        "id": "{oid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_application_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/applies/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/applies/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/applies/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/applies/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-application-{hashcode}-{version}",
        "type": "Application",
        "id": "{applyId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_refunded_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/refund_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/refund_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/refund_receipts/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/refund_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-refunded-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_returned_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/return_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/return_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/return_receipts/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/return_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-returned-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_ship_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/ship_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/ship_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/ship_receipts/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/ship_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-ship-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_receive_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/receive_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/receive_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/receive_receipts/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/receive_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-receive-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "boss_tickets",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "boss/tickets",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/boss/tickets$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "boss-tickets-{version}",
        "type": "Tickets",
        "id": "{ticketId}"
      },
      "response": {}
    },
    {
      "name": "boss_shops",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "boss/shops",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/boss/shops$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "boss-shops-{version}",
        "type": "Shops",
        "id": "{shopId}"
      },
      "response": {}
    },
    {
      "name": "boss_cellphone_sms",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "boss/cellphone/sms",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/boss/cellphone/sms$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "boss-cellphone-sms-{version}",
        "type": "CellphoneSMS",
        "id": "{testPhone}"
      },
      "response": {}
    },
    {
      "name": "usercenter_ticket_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "usercenter/tickets",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/usercenter/tickets$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "qm-user-{version}",
        "type": "User"
      },
      "response": {}
    },
    {
      "name": "usercenter_shop_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "usercenter/shops",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/usercenter/shops$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "qm-usershop-{version}",
        "type": "Shop"
      },
      "response": {}
    },
    {
      "name": "oms_delivery_note_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "oms/delivery/notes/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/oms/delivery/notes/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "oms/delivery/notes/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "qm-oms-{hashcode}-{version}",
        "type": "DeliveryNote",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "uc_visit_plan_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "uc/visit/plan/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/uc/visit/plan/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "uc/visit/plan/(?P<adminId>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "qm-uc-{version}",
        "type": "Plan",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "uc_visit_record_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "uc/visit/record/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/uc/visit/record/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "uc/visit/record/(?P<adminId>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "qm-uc-{version}",
        "type": "Record",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "pc_goods_barcode",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "pc/goods/barcode",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/pc/goods/barcode$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "pc-goods-barcode-{version}",
        "type": "Barcode",
        "id": "{barcode}"
      },
      "response": {}
    },
    {
      "name": "x_site_site_info",
      "res_type": "default",
      "http_method": "GET,POST,DELETE",
      "url_format": "x/site/site/info",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/x/site/site/info"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "id": "site/info/(?P<id>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "x-site-site-info-{version}",
        "type": "SiteInfo",
        "id": "{id}"
      },
      "response": {}
    },
    {
      "name": "x_site_page_info",
      "res_type": "default",
      "http_method": "GET,POST,DELETE",
      "url_format": "x/site/page/info",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/x/site/page/info"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "id": "page/info/(?P<id>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "x-site-page-info-{version}",
        "type": "PageInfo",
        "id": "{id}"
      },
      "response": {}
    },
    {
      "name": "uc_employee_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "uc/employee/[\\d\\D]*",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/uc/employee/[\\d\\D]*"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "uc/employee/(?P<adminId>[\\d\\D]*)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "qm-uc-employee-{version}",
        "type": "Employee",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "uc_partner_customer_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "uc/partner/customer/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/uc/partner/customer/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "uc/partner/customer/(?P<adminId>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "qm-uc-partner-customer-{version}",
        "type": "PartnerCustomer",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "yxd_shop_name_suggest",
      "res_type": "yxd_suggest",
      "http_method": "GET",
      "url_format": "suggests/yxd/shop",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/suggests/yxd/shop$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "yxd_shop_suggest"
      },
      "response": {}
    },
    {
      "name": "d2c_cart_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "scene/d2c/interest/cart/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/scene/d2c/interest/cart/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/interest/cart/(?P<adminId>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "qm-d2c-cart-{version}",
        "type": "Cart",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_cart_footprint_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "scene/d2c/interest/footprint/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/scene/d2c/interest/footprint/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/interest/footprint/(?P<adminId>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "qm-d2c-cart-footprint-{version}",
        "type": "CartFootprint",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_cart_favourite_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "scene/d2c/interest/favourite/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/scene/d2c/interest/favourite/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/interest/favourite/(?P<adminId>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "qm-d2c-cart-favourite-{version}",
        "type": "CartFavourite",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "b2c_retail_view",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "scene/b2c/retail/view/[\\d\\D]*",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/scene/b2c/retail/view/[\\d\\D]*"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/b2c/retail/view/(?P<adminId>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "b2c-retail-view-{version}",
        "type": "B2CRetailView",
        "add_admin_id_field": true,
        "id": "{id}"
      },
      "response": {}
    },
    {
      "name": "b2c_retail_operation",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "scene/b2c/retail/operation/[\\d\\D]*",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/scene/b2c/retail/operation/[\\d\\D]*"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/b2c/retail/operation/(?P<adminId>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "b2c-retail-operation-{version}",
        "type": "B2CRetailOperation",
        "add_admin_id_field": true,
        "id": "{id}"
      },
      "response": {}
    },
    {
      "name": "bi_reports_product",
      "res_type": "default",
      "http_method": "GET,POST,DELETE,PUT",
      "url_format": "bi/reports/product",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/bi/reports/product$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "reference": "bi",
        "index": "bi-report-product",
        "id": "{id}"
      },
      "response": {}
    },
    {
      "name": "bi_reports_store_o2o",
      "desc": "门店明细报表，负责人：杨志远",
      "res_type": "default",
      "http_method": "GET,POST,DELETE,PUT",
      "url_format": "bi/reports/store/o2o",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/bi/reports/store/o2o$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "reference": "bi",
        "index": "bi-report-store-o2o",
        "id": "{id}"
      },
      "response": {}
    },
    {
      "name": "bi_reports_customer_mall",
      "desc": "云商城客户分析明细报表，负责人：杨志远",
      "res_type": "default",
      "http_method": "GET,POST,DELETE,PUT",
      "url_format": "bi/reports/customer/mall",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/bi/reports/customer/mall$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "reference": "bi",
        "index": "bi-report-customer-mall",
        "id": "{id}"
      },
      "response": {}
    },
    {
      "name": "bi_reports_customer_distribution",
      "desc": "云分销客户分析明细报表，负责人：杨志远",
      "res_type": "default",
      "http_method": "GET,POST,DELETE,PUT",
      "url_format": "bi/reports/customer/distribution",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/bi/reports/customer/distribution$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "reference": "bi",
        "index": "bi-report-customer-distribution",
        "id": "{id}"
      },
      "response": {}
    },
    {
      "name": "bi_reports_customer_store",
      "desc": "云小店客户分析明细报表，负责人：杨志远",
      "res_type": "default",
      "http_method": "GET,POST,DELETE,PUT",
      "url_format": "bi/reports/customer/store",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/bi/reports/customer/store$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "reference": "bi",
        "index": "bi-report-customer-store",
        "id": "{id}"
      },
      "response": {}
    },
    {
      "name": "d2c_standard_trades",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "scene/d2c/standard/trades",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/scene/d2c/standard/trades/(?!applies)[\\d\\D]*$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/standard/trades/(?P<adminId>[\\d\\D]*)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-standard-trade-{hashcode}-{version}",
        "type": "Trade",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_standard_trades_applies",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "scene/d2c/standard/trades/applies",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/scene/d2c/standard/trades/applies/[\\d\\D]*$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/standard/trades/applies/(?P<adminId>[\\d\\D]*)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-standard-trade-application-{hashcode}-{version}",
        "type": "Application",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "shop_pay_type_statistics",
      "desc": "店铺支付方式统计",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "shop/pay/type/statistics",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/shop/pay/type/statistics$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "shop-pay-type-statistics",
        "type": "Statistics",
        "id": "{sid}"
      },
      "response": {}
    },
    {
      "name": "shop_olp_statistics",
      "desc": "店铺网关统计",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "shop/olp/statistics",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/shop/olp/statistics$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "shop-olp-statistics",
        "type": "Statistics",
        "id": "{sid}"
      },
      "response": {}
    },
    {
      "name": "tms_view_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "tms/view",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/tms/view/[\\d\\D]*$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "tms/view/(?P<adminId>[\\d\\D]*)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "tms-view-{version}",
        "type": "View",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "system_orders_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "system/orders",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/system/orders$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "qm-system-order-{version}",
        "type": "Order"
      },
      "response": {}
    },
    {
      "name": "purchaser_sku_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "purchaser/sku",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/purchaser/sku/[\\d\\D]*$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "purchaser/sku/(?P<adminId>[\\d\\D]*)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "qmshop-purchaser-sku-new",
        "type": "Sku",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "purchase_view_trade",
      "res_type": "default",
      "http_method": "GET,POST,DELETE,PUT",
      "url_format": "purchase/view/trade",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/purchase/view/trade/[\\d\\D]*$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "purchase/view/trade/(?P<adminId>[\\d\\D]*)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "pc_es_cluster",
        "index": "purchase-view-trade",
        "type": "Trade",
        "id": "{tid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "desc": "大订单视图的数据查询",
      "name": "view_retail_trades_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "view/retail/trades",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/view/retail/trades/(?!applies)[\\d\\D]*$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "view/retail/trades/(?P<adminId>[\\d\\D]*)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "view-retail-trades",
        "type": "Trade",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "desc": "大订单申请单视图的数据查询",
      "name": "view_retail_trades_applies_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "view/retail/trades/applies",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/view/retail/trades/applies/[\\d\\D]*$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "view/retail/trades/applies/(?P<adminId>[\\d\\D]*)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "view-retail-trades-applies",
        "type": "Trade",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "desc": "连接大视图的查询",
      "name": "b2c_connection_grandview_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "b2c/connection/grandview",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/b2c/connection/grandview$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "b2c-connection-grandview",
        "type": "View"
      },
      "response": {}
    },
    {
      "name": "uc_card_position_category_suggest",
      "desc": "会员中心名片数据，负责人：李广",
      "res_type": "common_suggest",
      "http_method": "GET,POST,DELETE",
      "url_format": "suggest/uc/card/position/category",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/suggest/uc/card/position/category$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "common_suggest_reference",
        "index": "uc-card-position-category-suggest"
      },
      "response": {}
    },
    {
      "name": "pc_item_operation_log",
      "desc": "商品操作日志，负责人：张德元",
      "res_type": "default",
      "http_method": "GET,POST,DELETE,PUT",
      "url_format": "pc/item/operation/log",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/pc/item/operation/log$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "pc_es_cluster",
        "index": "item-operation-log",
        "type": "Log",
        "id": "{id}"
      },
      "response": {}
    },
    {
      "desc": "d2p营销相关的接口统一由张睿负责",
      "name": "d2p_marketing_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^d2p/marketings/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/d2p/marketings/(?!(items|trades|usercoupons|fans|integral))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "d2p/marketings/(?P<adminId>[^/]+)",
          "id": "d2p/marketings/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2p-marketing-{hashcode}-{version}",
        "type": "Marketing",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2p_marketing_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^d2p/marketings/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/d2p/marketings/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "d2p/marketings/items/(?P<adminId>[^/]+)",
          "id": "d2p/marketings/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2p-marketing-item-{hashcode}-{version}",
        "type": "Item",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2p_marketing_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^d2p/marketings/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/d2p/marketings/trades/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "d2p/marketings/trades/(?P<adminId>[^/]+)",
          "id": "d2p/marketings/trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2p-marketing-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{tid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2p_marketing_usercoupon_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^d2p/marketings/usercoupons/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/d2p/marketings/usercoupons/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "d2p/marketings/usercoupons/(?P<adminId>[^/]+)",
          "id": "d2p/marketings/usercoupons/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2p-marketing-usercoupon-{hashcode}-{version}",
        "type": "Coupon",
        "id": "{couponId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2p_marketing_integral_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^d2p/marketings/integral/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/d2p/marketings/integral/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "d2p/marketings/integral/items/(?P<adminId>[^/]+)",
          "id": "d2p/marketings/integral/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2p-marketing-integral-items-{hashcode}-{version}",
        "type": "Item",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "desc": "收银统一单据凭证查询，负责人：霍闯",
      "name": "acct_uniorders_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "scene/acct/uniorders",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/scene/acct/uniorders$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "acct-uniorders",
        "type": "Order"
      },
      "response": {}
    },
    {
      "desc": "名片小程序群组社区动态信息查询，负责人：潘儒森（以下notice皆代表动态）",
      "name": "uc_card_notice_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^uc/card/notice",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/uc/card/notice/[\\d\\D]*"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "uc/card/notice/(?P<adminId>[^/]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "uc-card-notice",
        "type": "Notice",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "desc": "直营门店商品搜索，负责人：白晓琳",
      "name": "direct_store_search",
      "res_type": "product",
      "http_method": "GET",
      "url_format": "^products/store/direct/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/products/store/direct/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "/products/store/direct/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 10,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "new_es_cluster_pc",
        "index": "direct-store-sku-{hashcode}",
        "type": "Sku",
        "spu_index": "direct-store-spu-{hashcode}",
        "spu_type": "Spu",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "desc": "直营门店商品SPU查询，负责人：白晓琳",
      "name": "direct_store_spu_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^pc/store/direct/spu/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/pc/store/direct/spu/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "store/direct/spu/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 10,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "new_es_cluster_pc",
        "index": "direct-store-spu-{hashcode}",
        "type": "Spu",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "desc": "直营门店商品SKU查询，负责人：白晓琳",
      "name": "direct_store_sku_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^pc/store/direct/sku/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/pc/store/direct/sku/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "store/direct/sku/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 10,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "new_es_cluster_pc",
        "index": "direct-store-sku-{hashcode}",
        "type": "Sku",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "desc": "名片小程序群组相册查询，负责人：潘儒森",
      "name": "uc_card_album_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^uc/card/album",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/uc/card/album/[\\d\\D]*"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "uc/card/album/(?P<adminId>[^/]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "uc-card-album",
        "type": "Album",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "b2b_market_shop_suggest",
      "desc": "货源市场商品名称数据，负责人：白晓琳",
      "res_type": "common_suggest",
      "http_method": "GET,POST,DELETE",
      "url_format": "suggest/b2bmarket/shop/keyword",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/suggest/b2bmarket/shop/keyword$"
          }
        ]
      },
      "data_parser": {},
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "common_suggest_reference",
        "index": "b2b-market-shop-keyword-suggest"
      },
      "response": {}
    },
    {
      "desc": "名片小程序资料库数据查询，负责人：潘儒森",
      "name": "uc_card_data_bank_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^uc/card/databank",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/uc/card/databank/[\\d\\D]*"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "uc/card/databank/(?P<adminId>[^/]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "uc-card-data-bank",
        "type": "DataBank",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "product_title_data",
      "desc": "商品标题数据，负责人：王伟",
      "res_type": "common_suggest",
      "http_method": "GET,POST,DELETE",
      "url_format": "/suggest/shop/cloud/product/keyword",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/suggest/shop/cloud/product/keyword/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "/suggest/shop/cloud/product/keyword/(?P<adminId>[^/]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "common_suggest_reference",
        "index": "suggest-shop-cloud-product"
      },
      "response": {}
    },
    {
      "desc": "用户计次卡查询，负责人：张超珉",
      "name": "uc_count_card_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "marketing/count/card",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/marketing/count/card/[\\d\\D]*"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketing/count/card/(?P<adminId>[^/]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "user-count-card",
        "type": "Card",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "desc": "预约单数据查询，负责人：李健",
      "name": "user_appointment_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "user/conn/appointment",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/user/conn/appointment/[\\d\\D]*"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "user/conn/appointment/(?P<adminId>[^/]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "user-conn-appointment",
        "type": "Appointment",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "desc": "市场入驻店铺数据查询，负责人：白晓琳",
      "name": "b2b_market_shop_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "b2b/market/shops",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/b2b/market/shops$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "b2b-market-shop",
        "type": "Shop"
      },
      "response": {}
    }
  ]
}
