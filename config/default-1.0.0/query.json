{
  "chain": [
    {
      "name": "trades_bills_query",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "^scene/acct/trades/bills$",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/acct/trades/bills"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "acct-trades-bills",
        "type": "bills",
        "id": "{fundsId}"
      },
      "response": {}
    },
    {
      "name": "sup_product_query",
      "res_type": "product",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^products/gonghuo/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/products/gonghuo"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "gonghuo_product"
      },
      "response": {}
    },
    {
      "name": "yun_product_query",
      "res_type": "product",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^products/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/products/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "products/(?P<adminId>[\\d\\D]+)",
          "ids": "ids=(?P<ids>[\\d\\D]+?);",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "product_vip",
              "id": "{skuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "product_experience",
              "id": "{skuId}",
              "tag": "default"
            }
          ]
        }
      },
      "response": {}
    },
    {
      "name": "sup_spu_query",
      "res_type": "product",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^spus/gonghuo/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/spus/gonghuo"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "gonghuo_spu"
      },
      "response": {}
    },
    {
      "name": "yun_spu_query",
      "res_type": "product",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^spus/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/spus/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "spus/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu_vip",
              "id": "{spuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "spu_experience",
              "id": "{spuId}",
              "tag": "default"
            }
          ]
        }
      },
      "response": {}
    },
    {
      "name": "sup_product_aggregation",
      "res_type": "aggregation",
      "http_method": "GET",
      "url_format": "^aggregations/gonghuo/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/aggregations/gonghuo"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "gonghuo_product"
      },
      "response": {}
    },
    {
      "name": "yun_product_aggregation",
      "res_type": "aggregation",
      "http_method": "GET",
      "url_format": "^aggregations/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/aggregations/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "aggregations/(?P<adminId>[\\d\\D]+)",
          "ids": "ids=(?P<ids>[\\d\\D]+?);",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "product_vip",
              "id": "{skuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "product_experience",
              "id": "{skuId}",
              "tag": "default"
            }
          ]
        }
      },
      "response": {}
    },
    {
      "name": "yun_spu_aggregation",
      "res_type": "aggregation",
      "http_method": "GET",
      "url_format": "^spu_aggregations/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/spu_aggregations/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "spu_aggregations/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu_vip",
              "id": "{spuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "spu_experience",
              "id": "{spuId}",
              "tag": "default"
            }
          ]
        }
      }
    },
    {
      "name": "yun_product_suggest",
      "res_type": "suggest",
      "http_method": "GET",
      "url_format": "^suggests/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/suggests/[^/]+$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "suggests/(?P<adminId>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "suggest_vip"
      },
      "response": {
        "json": {
          "format": "json",
          "data_parser": {
            "language": "python",
            "script": "script.python.data_parser"
          }
        }
      }
    },
    {
      "name": "sup_product_search",
      "res_type": "search",
      "http_method": "GET",
      "url_format": "^search/gonghuo/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/search/gonghuo"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "gonghuo_product"
      },
      "response": {}
    },
    {
      "name": "yun_product_search",
      "res_type": "search",
      "http_method": "GET",
      "url_format": "^search/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/search/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "search/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "product_vip",
              "id": "{skuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "product_experience",
              "id": "{skuId}",
              "tag": "default"
            }
          ]
        }
      },
      "response": {}
    },
    {
      "name": "sup_spu_search",
      "res_type": "search",
      "http_method": "GET",
      "url_format": "^spu_search/gonghuo/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/spu_search/gonghuo"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "gonghuo_spu"
      },
      "response": {}
    },
    {
      "name": "yun_spu_search",
      "res_type": "search",
      "http_method": "GET",
      "url_format": "^spu_search/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/spu_search/(?!gonghuo)[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "spu_search/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu_vip",
              "id": "{spuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "spu_experience",
              "id": "{spuId}",
              "tag": "default"
            }
          ]
        }
      },
      "response": {}
    },
    {
      "name": "stats_search",
      "res_type": "measure",
      "http_method": "GET",
      "url_format": "^stats/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/stats/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "index": "stats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)",
          "task_name": "stats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)"
        }
      }
    },
    {
      "name": "exstats_search",
      "res_type": "ex_measure",
      "http_method": "GET",
      "url_format": "^exstats/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/exstats/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "index": "exstats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)",
          "task_name": "exstats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)"
        }
      }
    },
    {
      "name": "ex_suggest",
      "res_type": "ex_suggest",
      "http_method": "GET",
      "url_format": "^suggests/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/suggests/[\\d\\D]+?/scenes/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "/suggests/(?P<adminId>[\\d\\D]+?)/scenes",
          "scene": "/scenes/(?P<scene>[\\d\\D]+)"
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "suggest_vip"
      }
    },
    {
      "name": "recommendation",
      "res_type": "recommendation",
      "http_method": "GET",
      "url_format": "^recommendations/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/recommendations/[\\d\\D]+?/scenes/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "/recommendations/(?P<adminId>[\\d\\D]+?)/scenes",
          "scene": "/scenes/(?P<scene>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 50,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "router": {
          "type": "vip_router",
          "fields": {
            "adminId": "{adminId}"
          },
          "target": [
            {
              "destination_type": "elasticsearch",
              "reference": "product_vip",
              "id": "{skuId}",
              "tag": "vip"
            },
            {
              "destination_type": "elasticsearch",
              "reference": "product_experience",
              "id": "{skuId}",
              "tag": "default"
            }
          ]
        }
      }
    },
    {
      "name": "cloudshop_marketing_query",
      "res_type": "default",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^cloudshop/marketings/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/cloudshop/marketings/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/(?P<adminId>[^/]+)",
          "id": "marketings/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "cloudshop-marketing-{hashcode}-{version}",
        "type": "Marketing",
        "id": "{marketingId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "billstock_basic_query",
      "res_type": "default",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^billstock/[\\d\\D]+?/basic[\\d\\D]*",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/billstock/[^/]+?/basic"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "billstock/(?P<adminId>[^/]+)/basic",
          "id": "/basic/[^/]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "billstock-{version}",
        "type": "basic",
        "id": "{billId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "billstock_detail_query",
      "res_type": "default",
      "http_method": "GET,PUT,POST,DELETE",
      "url_format": "^billstock/[\\d\\D]+?/detail[\\d\\D]*",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/billstock/[\\d\\D]+?/detail"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "billstock/(?P<adminId>[^/]+)/detail",
          "id": "/detail/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "billstock-{version}",
        "type": "detail",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "open_api_qmcs_log",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^openapi/logs/qmcs$",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/openapi/logs/qmcs"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "openapi-srvlog-*",
        "type": "SRV_LOG",
        "host": "{log_es_host}",
        "id": "generate"
      },
      "response": {}
    },
    {
      "name": "d2c_service_log",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^d2c/logs/service$",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/d2c/logs/service"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "d2c-srvlog",
        "type": "SRV_LOG",
        "host": "{log_es_host}",
        "id": "generate"
      },
      "response": {}
    },
    {
      "name": "marketing_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "(?!cloudshop)/marketings/(?!(items|trades|usercoupons|fans|integral))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/(?P<adminId>[^/]+)",
          "id": "marketings/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "marketing-{hashcode}-{version}",
        "type": "Marketing",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "marketing_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/marketings/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/items/(?P<adminId>[^/]+)",
          "id": "marketings/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "marketing-item-{hashcode}-{version}",
        "type": "Item",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "marketing_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/marketings/trades/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/trades/(?P<adminId>[^/]+)",
          "id": "marketings/trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "marketing-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{tid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "marketing_usercoupon_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/usercoupons/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/marketings/usercoupons/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/usercoupons/(?P<adminId>[^/]+)",
          "id": "marketings/usercoupons/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "marketing-usercoupon-{hashcode}-{version}",
        "type": "Coupon",
        "id": "{couponId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "marketing_fans_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/fans/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/marketings/fans/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/fans/(?P<adminId>[^/]+)",
          "id": "marketings/fans/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "marketing-fans-{hashcode}-{version}",
        "type": "Fans",
        "id": "{openId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "marketing_integral_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^marketings/integral/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/marketings/integral/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "marketings/integral/items/(?P<adminId>[^/]+)",
          "id": "marketings/integral/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "marketing-integral-items-{hashcode}-{version}",
        "type": "Item",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "scene/d2c/trades/(?!(items|applies|refund_receipts|return_receipts|cash|ship_receipts|receive_receipts))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "trades/(?P<adminId>[^/]+)",
          "id": "trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{tid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/items/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-item-{hashcode}-{version}",
        "type": "Item",
        "id": "{oid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_application_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/applies/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/applies/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/applies/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/applies/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-application-{hashcode}-{version}",
        "type": "Application",
        "id": "{applyId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_refunded_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/refund_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/refund_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/refund_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/refund_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-refunded-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_returned_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/return_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/return_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/return_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/return_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-returned-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_ship_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/ship_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/ship_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/ship_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/ship_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-ship-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_trade_receive_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/trades/receive_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/trades/receive_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/trades/receive_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/trades/receive_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-trade-receive-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2p_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2p/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "scene/d2p/trades/(?!(items|applications|refunded_receipts|returned_receipts))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "trades/(?P<adminId>[^/]+)",
          "id": "trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2p-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2p_trade_returned_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2p/trades/returned_receipts/[\\w]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "scene/d2p/trades/returned_receipts"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "trades/returned_receipts/(?P<adminId>[^/]+)",
          "id": "trades/returned_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2p-trade-returned-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{id}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_cash_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/cash/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "scene/d2c/cash/trades/(?!(items|refund_receipts|return_receipts))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/cash/trades/(?P<adminId>[^/]+)",
          "id": "scene/d2c/cash/trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-cash-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{tid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_cash_trade_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/cash/trades/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/cash/trades/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/cash/trades/items/(?P<adminId>[^/]+)",
          "id": "scene/d2c/cash/trades/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-cash-trade-item-{hashcode}-{version}",
        "type": "Item",
        "id": "{oid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_cash_trade_return_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/cash/trades/return_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/cash/trades/return_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/cash/trades/return_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/cash/trades/return_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-cash-trade-returned-{hashcode}-{version}",
        "type": "Item",
        "id": "{retTid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "d2c_cash_trade_refund_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/d2c/cash/trades/refund_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/d2c/cash/trades/refund_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/d2c/cash/trades/refund_receipts/(?P<adminId>[^/]+)",
          "id": "scene/d2c/cash/trades/refund_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "d2c-cash-trade-refunded-{hashcode}-{version}",
        "type": "Item",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "scene/consignment/trades/(?!(items|applies|refund_receipts|return_receipts|cash|ship_receipts|receive_receipts))"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "trades/(?P<adminId>[^/]+)",
          "id": "trades/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-{hashcode}-{version}",
        "type": "Trade",
        "id": "{tid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_item_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/items/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/items/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/items/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/items/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-item-{hashcode}-{version}",
        "type": "Item",
        "id": "{oid}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_application_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/applies/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/applies/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/applies/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/applies/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-application-{hashcode}-{version}",
        "type": "Application",
        "id": "{applyId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_refunded_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/refund_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/refund_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/refund_receipts/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/refund_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-refunded-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_returned_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/return_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/return_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/return_receipts/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/return_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-returned-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_ship_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/ship_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/ship_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/ship_receipts/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/ship_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-ship-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "consignment_trade_receive_receipts_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "^scene/consignment/trades/receive_receipts/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "/scene/consignment/trades/receive_receipts/"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "scene/consignment/trades/receive_receipts/(?P<adminId>[^/]+)",
          "id": "scene/consignment/trades/receive_receipts/[\\d\\D]+?/(?P<id>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "consignment-trade-receive-{hashcode}-{version}",
        "type": "Receipt",
        "id": "{receiptId}",
        "add_admin_id_field": true
      },
      "response": {}
    },
    {
      "name": "boss_tickets",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "boss/tickets",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/boss/tickets$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "boss-tickets-{version}",
        "type": "Tickets",
        "id": "{ticketId}"
      },
      "response": {}
    },
    {
      "name": "boss_shops",
      "res_type": "default",
      "http_method": "GET,POST",
      "url_format": "boss/shops",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/boss/shops$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_experience",
        "index": "boss-shops-{version}",
        "type": "Shops",
        "id": "{shopId}"
      },
      "response": {}
    },
    {
      "name": "usercenter_ticket_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "usercenter/tickets",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/usercenter/tickets$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "qm-user-{version}",
        "type": "User"
      },
      "response": {}
    },
    {
      "name": "usercenter_shop_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "usercenter/shops",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/usercenter/shops$"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {}
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "qm-usershop-{version}",
        "type": "Shop"
      },
      "response": {}
    },
    {
      "name": "oms_delivery_note_query",
      "res_type": "default",
      "http_method": "GET",
      "url_format": "oms/delivery/notes/[\\d\\D]+",
      "filter": {
        "type": "regex",
        "union_operator": "and",
        "conditions": [
          {
            "operator": "is",
            "type": "regex",
            "field": "url",
            "expression": "^/oms/delivery/notes/[\\d\\D]+"
          }
        ]
      },
      "data_parser": {
        "type": "regex",
        "fields": {
          "adminId": "oms/delivery/notes/(?P<adminId>[\\d\\D]+)",
          "hashcode": {
            "type": "hash_modulus",
            "modulus": 1,
            "origin_filed": "adminId"
          }
        }
      },
      "destination": {
        "destination_type": "elasticsearch",
        "reference": "general_vip",
        "index": "qm-oms-{hashcode}-{version}",
        "type": "DeliveryNote",
        "add_admin_id_field": true
      },
      "response": {}
    }
  ]
}
