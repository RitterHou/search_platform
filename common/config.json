{
  "default": {
    "version": "1.0.0",
    "es_index_setting": {
      "product": {
        "host": "http://192.168.65.131:9200,http://192.168.65.132:9200,http://192.168.65.130:9200",
        "index": "qmshop-{adminID}-{version}",
        "type": "Product",
        "id": "{skuId}",
        "mapping": {
          "properties": {
            "category": {
              "index": "not_analyzed",
              "type": "string"
            },
            "tags": {
              "analyzer": "qm_standard",
              "term_vector": "with_positions_offsets",
              "type": "string"
            },
            "costPrice": {
              "index": "not_analyzed",
              "type": "double"
            },
            "marketPrice": {
              "index": "not_analyzed",
              "type": "double"
            },
            "onSale": {
              "type": "boolean"
            },
            "weight": {
              "index": "not_analyzed",
              "type": "string"
            },
            "spuId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "type": {
              "index": "not_analyzed",
              "type": "string",
              "boost": 20,
              "fields": {
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "salePoint": {
              "analyzer": "qm_standard",
              "term_vector": "with_positions_offsets",
              "type": "string"
            },
            "adminId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "cats": {
              "properties": {
                "id": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "name": {
                  "index": "not_analyzed",
                  "type": "string",
                  "fields": {
                    "standard": {
                      "analyzer": "qm_standard",
                      "type": "string"
                    }
                  }
                },
                "childs": {
                  "properties": {
                    "id": {
                      "index": "not_analyzed",
                      "type": "string"
                    },
                    "name": {
                      "index": "not_analyzed",
                      "type": "string",
                      "fields": {
                        "standard": {
                          "analyzer": "qm_standard",
                          "type": "string"
                        }
                      }
                    },
                    "childs": {
                      "properties": {
                        "id": {
                          "index": "not_analyzed",
                          "type": "string"
                        },
                        "name": {
                          "index": "not_analyzed",
                          "type": "string",
                          "fields": {
                            "standard": {
                              "analyzer": "qm_standard",
                              "type": "string"
                            }
                          }
                        },
                        "childs": {
                          "properties": {
                            "id": {
                              "index": "not_analyzed",
                              "type": "string"
                            },
                            "name": {
                              "index": "not_analyzed",
                              "type": "string",
                              "fields": {
                                "standard": {
                                  "analyzer": "qm_standard",
                                  "type": "string"
                                }
                              }
                            },
                            "childs": {
                              "properties": {
                                "id": {
                                  "index": "not_analyzed",
                                  "type": "string"
                                },
                                "name": {
                                  "index": "not_analyzed",
                                  "type": "string",
                                  "fields": {
                                    "standard": {
                                      "analyzer": "qm_standard",
                                      "type": "string"
                                    }
                                  }
                                },
                                "childs": {
                                  "properties": {
                                    "id": {
                                      "index": "not_analyzed",
                                      "type": "string"
                                    },
                                    "name": {
                                      "index": "not_analyzed",
                                      "type": "string",
                                      "fields": {
                                        "standard": {
                                          "analyzer": "qm_standard",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "childs": {
                                      "type": "nested"
                                    }
                                  },
                                  "type": "nested"
                                }
                              },
                              "type": "nested"
                            }
                          },
                          "type": "nested"
                        }
                      },
                      "type": "nested"
                    }
                  },
                  "type": "nested"
                }
              },
              "type": "nested"
            },
            "unit": {
              "index": "not_analyzed",
              "type": "string"
            },
            "title": {
              "index_analyzer": "ansj_index",
              "store": true,
              "search_analyzer": "ansj_query",
              "boost": 20,
              "term_vector": "with_positions_offsets",
              "type": "string",
              "fields": {
                "raw": {
                  "type": "string",
                  "index": "not_analyzed"
                },
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "stock": {
              "properties": {
                "count": {
                  "index": "not_analyzed",
                  "type": "long"
                },
                "status": {
                  "type": "boolean"
                },
                "name": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "regions": {
                  "properties": {
                    "count": {
                      "index": "no",
                      "type": "long"
                    },
                    "status": {
                      "type": "boolean"
                    },
                    "name": {
                      "index": "not_analyzed",
                      "type": "string"
                    }
                  }
                }
              },
              "type": "nested"
            },
            "skuId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "brand": {
              "index": "not_analyzed",
              "type": "string",
              "boost": 50,
              "fields": {
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "images": {
              "index": "no",
              "type": "string"
            },
            "salePrice": {
              "precision_step": 4,
              "type": "double"
            },
            "props": {
              "properties": {
                "name": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "value": {
                  "index": "not_analyzed",
                  "type": "string",
                  "fields": {
                    "standard": {
                      "analyzer": "qm_standard",
                      "type": "string"
                    }
                  }
                }
              },
              "type": "nested"
            }
          },
          "_all": {
            "store": true,
            "analyzer": "qm_standard",
            "auto_boost": true
          }
        }
      },
      "gonghuo_product": {
        "host": "http://192.168.65.131:9200,http://192.168.65.132:9200,http://192.168.65.130:9200",
        "index": "qmshop-gonghuo-{version}",
        "type": "Product",
        "id": "{skuId}",
        "mapping": {
          "properties": {
            "category": {
              "index": "not_analyzed",
              "type": "string"
            },
            "tags": {
              "analyzer": "qm_standard",
              "term_vector": "with_positions_offsets",
              "type": "string"
            },
            "costPrice": {
              "index": "not_analyzed",
              "type": "double"
            },
            "marketPrice": {
              "index": "not_analyzed",
              "type": "double"
            },
            "onSale": {
              "type": "boolean"
            },
            "weight": {
              "index": "not_analyzed",
              "type": "string"
            },
            "adminId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "spuId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "type": {
              "index": "not_analyzed",
              "type": "string",
              "boost": 20,
              "fields": {
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "salePoint": {
              "analyzer": "qm_standard",
              "term_vector": "with_positions_offsets",
              "type": "string"
            },
            "adminId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "cats": {
              "properties": {
                "id": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "name": {
                  "index": "not_analyzed",
                  "type": "string",
                  "fields": {
                    "standard": {
                      "analyzer": "qm_standard",
                      "type": "string"
                    }
                  }
                },
                "childs": {
                  "properties": {
                    "id": {
                      "index": "not_analyzed",
                      "type": "string"
                    },
                    "name": {
                      "index": "not_analyzed",
                      "type": "string",
                      "fields": {
                        "standard": {
                          "analyzer": "qm_standard",
                          "type": "string"
                        }
                      }
                    },
                    "childs": {
                      "properties": {
                        "id": {
                          "index": "not_analyzed",
                          "type": "string"
                        },
                        "name": {
                          "index": "not_analyzed",
                          "type": "string",
                          "fields": {
                            "standard": {
                              "analyzer": "qm_standard",
                              "type": "string"
                            }
                          }
                        },
                        "childs": {
                          "properties": {
                            "id": {
                              "index": "not_analyzed",
                              "type": "string"
                            },
                            "name": {
                              "index": "not_analyzed",
                              "type": "string",
                              "fields": {
                                "standard": {
                                  "analyzer": "qm_standard",
                                  "type": "string"
                                }
                              }
                            },
                            "childs": {
                              "properties": {
                                "id": {
                                  "index": "not_analyzed",
                                  "type": "string"
                                },
                                "name": {
                                  "index": "not_analyzed",
                                  "type": "string",
                                  "fields": {
                                    "standard": {
                                      "analyzer": "qm_standard",
                                      "type": "string"
                                    }
                                  }
                                },
                                "childs": {
                                  "properties": {
                                    "id": {
                                      "index": "not_analyzed",
                                      "type": "string"
                                    },
                                    "name": {
                                      "index": "not_analyzed",
                                      "type": "string",
                                      "fields": {
                                        "standard": {
                                          "analyzer": "qm_standard",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "childs": {
                                      "type": "nested"
                                    }
                                  },
                                  "type": "nested"
                                }
                              },
                              "type": "nested"
                            }
                          },
                          "type": "nested"
                        }
                      },
                      "type": "nested"
                    }
                  },
                  "type": "nested"
                }
              },
              "type": "nested"
            },
            "unit": {
              "index": "not_analyzed",
              "type": "string"
            },
            "title": {
              "index_analyzer": "ansj_index",
              "store": true,
              "search_analyzer": "ansj_query",
              "boost": 20,
              "term_vector": "with_positions_offsets",
              "type": "string",
              "fields": {
                "raw": {
                  "type": "string",
                  "index": "not_analyzed"
                },
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "stock": {
              "properties": {
                "count": {
                  "index": "not_analyzed",
                  "type": "long"
                },
                "status": {
                  "type": "boolean"
                },
                "name": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "regions": {
                  "properties": {
                    "count": {
                      "index": "no",
                      "type": "long"
                    },
                    "status": {
                      "type": "boolean"
                    },
                    "name": {
                      "index": "not_analyzed",
                      "type": "string"
                    }
                  }
                }
              },
              "type": "nested"
            },
            "skuId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "brand": {
              "index": "not_analyzed",
              "type": "string",
              "boost": 50,
              "fields": {
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "images": {
              "index": "no",
              "type": "string"
            },
            "salePrice": {
              "precision_step": 4,
              "type": "double"
            },
            "props": {
              "properties": {
                "name": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "value": {
                  "index": "not_analyzed",
                  "type": "string",
                  "fields": {
                    "standard": {
                      "analyzer": "qm_standard",
                      "type": "string"
                    }
                  }
                }
              },
              "type": "nested"
            }
          },
          "_all": {
            "store": true,
            "analyzer": "qm_standard",
            "auto_boost": true
          }
        }
      },
      "suggest": {
        "host": "http://192.168.65.131:9200,http://192.168.65.132:9200,http://192.168.65.130:9200",
        "index": "suggest-{adminID}-{version}",
        "type": "ProductSuggest",
        "id": "{id}",
        "mapping": {
          "properties": {
            "id": {
              "index": "not_analyzed",
              "store": true,
              "type": "string"
            },
            "name": {
              "index": "not_analyzed",
              "store": true,
              "type": "string"
            },
            "source_type": {
              "index": "not_analyzed",
              "store": true,
              "type": "string"
            },
            "suggest": {
              "max_input_length": 50,
              "preserve_separators": true,
              "payloads": true,
              "index_analyzer": "standard",
              "search_analyzer": "standard",
              "preserve_position_increments": true,
              "type": "completion"
            }
          }
        }
      },
      "spu": {
        "host": "http://192.168.65.131:9200,http://192.168.65.132:9200,http://192.168.65.130:9200",
        "index": "qmshop-{adminID}-{version}",
        "type": "Spu",
        "id": "{spuId}",
        "mapping": {
          "properties": {
            "category": {
              "index": "not_analyzed",
              "type": "string"
            },
            "tags": {
              "analyzer": "qm_standard",
              "term_vector": "with_positions_offsets",
              "type": "string"
            },
            "costPrice": {
              "index": "not_analyzed",
              "type": "double"
            },
            "marketPrice": {
              "index": "not_analyzed",
              "type": "double"
            },
            "onSale": {
              "type": "boolean"
            },
            "weight": {
              "index": "not_analyzed",
              "type": "string"
            },
            "spuId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "type": {
              "index": "not_analyzed",
              "type": "string",
              "boost": 20,
              "fields": {
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "salePoint": {
              "analyzer": "qm_standard",
              "term_vector": "with_positions_offsets",
              "type": "string"
            },
            "adminId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "cats": {
              "properties": {
                "id": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "name": {
                  "index": "not_analyzed",
                  "type": "string",
                  "fields": {
                    "standard": {
                      "analyzer": "qm_standard",
                      "type": "string"
                    }
                  }
                },
                "childs": {
                  "properties": {
                    "id": {
                      "index": "not_analyzed",
                      "type": "string"
                    },
                    "name": {
                      "index": "not_analyzed",
                      "type": "string",
                      "fields": {
                        "standard": {
                          "analyzer": "qm_standard",
                          "type": "string"
                        }
                      }
                    },
                    "childs": {
                      "properties": {
                        "id": {
                          "index": "not_analyzed",
                          "type": "string"
                        },
                        "name": {
                          "index": "not_analyzed",
                          "type": "string",
                          "fields": {
                            "standard": {
                              "analyzer": "qm_standard",
                              "type": "string"
                            }
                          }
                        },
                        "childs": {
                          "properties": {
                            "id": {
                              "index": "not_analyzed",
                              "type": "string"
                            },
                            "name": {
                              "index": "not_analyzed",
                              "type": "string",
                              "fields": {
                                "standard": {
                                  "analyzer": "qm_standard",
                                  "type": "string"
                                }
                              }
                            },
                            "childs": {
                              "properties": {
                                "id": {
                                  "index": "not_analyzed",
                                  "type": "string"
                                },
                                "name": {
                                  "index": "not_analyzed",
                                  "type": "string",
                                  "fields": {
                                    "standard": {
                                      "analyzer": "qm_standard",
                                      "type": "string"
                                    }
                                  }
                                },
                                "childs": {
                                  "properties": {
                                    "id": {
                                      "index": "not_analyzed",
                                      "type": "string"
                                    },
                                    "name": {
                                      "index": "not_analyzed",
                                      "type": "string",
                                      "fields": {
                                        "standard": {
                                          "analyzer": "qm_standard",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "childs": {
                                      "type": "nested"
                                    }
                                  },
                                  "type": "nested"
                                }
                              },
                              "type": "nested"
                            }
                          },
                          "type": "nested"
                        }
                      },
                      "type": "nested"
                    }
                  },
                  "type": "nested"
                }
              },
              "type": "nested"
            },
            "unit": {
              "index": "not_analyzed",
              "type": "string"
            },
            "title": {
              "index_analyzer": "ansj_index",
              "store": true,
              "search_analyzer": "ansj_query",
              "boost": 20,
              "term_vector": "with_positions_offsets",
              "type": "string",
              "fields": {
                "raw": {
                  "type": "string",
                  "index": "not_analyzed"
                },
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "stock": {
              "properties": {
                "count": {
                  "index": "not_analyzed",
                  "type": "long"
                },
                "status": {
                  "type": "boolean"
                },
                "name": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "regions": {
                  "properties": {
                    "count": {
                      "index": "no",
                      "type": "long"
                    },
                    "status": {
                      "type": "boolean"
                    },
                    "name": {
                      "index": "not_analyzed",
                      "type": "string"
                    }
                  }
                }
              },
              "type": "nested"
            },
            "skuId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "brand": {
              "index": "not_analyzed",
              "type": "string",
              "boost": 50,
              "fields": {
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "images": {
              "index": "no",
              "type": "string"
            },
            "salePrice": {
              "precision_step": 4,
              "type": "double"
            },
            "props": {
              "properties": {
                "name": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "value": {
                  "index": "not_analyzed",
                  "type": "string",
                  "fields": {
                    "standard": {
                      "analyzer": "qm_standard",
                      "type": "string"
                    }
                  }
                }
              },
              "type": "nested"
            }
          },
          "_all": {
            "store": true,
            "analyzer": "qm_standard",
            "auto_boost": true
          }
        }
      },
      "gonghuo_spu": {
        "host": "http://192.168.65.131:9200,http://192.168.65.132:9200,http://192.168.65.130:9200",
        "index": "qmshop-gonghuo-{version}",
        "type": "Spu",
        "id": "{spuId}",
        "mapping": {
          "properties": {
            "category": {
              "index": "not_analyzed",
              "type": "string"
            },
            "tags": {
              "analyzer": "qm_standard",
              "term_vector": "with_positions_offsets",
              "type": "string"
            },
            "costPrice": {
              "index": "not_analyzed",
              "type": "double"
            },
            "marketPrice": {
              "index": "not_analyzed",
              "type": "double"
            },
            "onSale": {
              "type": "boolean"
            },
            "weight": {
              "index": "not_analyzed",
              "type": "string"
            },
            "spuId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "type": {
              "index": "not_analyzed",
              "type": "string",
              "boost": 20,
              "fields": {
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "salePoint": {
              "analyzer": "qm_standard",
              "term_vector": "with_positions_offsets",
              "type": "string"
            },
            "adminId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "cats": {
              "properties": {
                "id": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "name": {
                  "index": "not_analyzed",
                  "type": "string",
                  "fields": {
                    "standard": {
                      "analyzer": "qm_standard",
                      "type": "string"
                    }
                  }
                },
                "childs": {
                  "properties": {
                    "id": {
                      "index": "not_analyzed",
                      "type": "string"
                    },
                    "name": {
                      "index": "not_analyzed",
                      "type": "string",
                      "fields": {
                        "standard": {
                          "analyzer": "qm_standard",
                          "type": "string"
                        }
                      }
                    },
                    "childs": {
                      "properties": {
                        "id": {
                          "index": "not_analyzed",
                          "type": "string"
                        },
                        "name": {
                          "index": "not_analyzed",
                          "type": "string",
                          "fields": {
                            "standard": {
                              "analyzer": "qm_standard",
                              "type": "string"
                            }
                          }
                        },
                        "childs": {
                          "properties": {
                            "id": {
                              "index": "not_analyzed",
                              "type": "string"
                            },
                            "name": {
                              "index": "not_analyzed",
                              "type": "string",
                              "fields": {
                                "standard": {
                                  "analyzer": "qm_standard",
                                  "type": "string"
                                }
                              }
                            },
                            "childs": {
                              "properties": {
                                "id": {
                                  "index": "not_analyzed",
                                  "type": "string"
                                },
                                "name": {
                                  "index": "not_analyzed",
                                  "type": "string",
                                  "fields": {
                                    "standard": {
                                      "analyzer": "qm_standard",
                                      "type": "string"
                                    }
                                  }
                                },
                                "childs": {
                                  "properties": {
                                    "id": {
                                      "index": "not_analyzed",
                                      "type": "string"
                                    },
                                    "name": {
                                      "index": "not_analyzed",
                                      "type": "string",
                                      "fields": {
                                        "standard": {
                                          "analyzer": "qm_standard",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "childs": {
                                      "type": "nested"
                                    }
                                  },
                                  "type": "nested"
                                }
                              },
                              "type": "nested"
                            }
                          },
                          "type": "nested"
                        }
                      },
                      "type": "nested"
                    }
                  },
                  "type": "nested"
                }
              },
              "type": "nested"
            },
            "unit": {
              "index": "not_analyzed",
              "type": "string"
            },
            "title": {
              "index_analyzer": "ansj_index",
              "store": true,
              "search_analyzer": "ansj_query",
              "boost": 20,
              "term_vector": "with_positions_offsets",
              "type": "string",
              "fields": {
                "raw": {
                  "type": "string",
                  "index": "not_analyzed"
                },
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "stock": {
              "properties": {
                "count": {
                  "index": "not_analyzed",
                  "type": "long"
                },
                "status": {
                  "type": "boolean"
                },
                "name": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "regions": {
                  "properties": {
                    "count": {
                      "index": "no",
                      "type": "long"
                    },
                    "status": {
                      "type": "boolean"
                    },
                    "name": {
                      "index": "not_analyzed",
                      "type": "string"
                    }
                  }
                }
              },
              "type": "nested"
            },
            "skuId": {
              "index": "not_analyzed",
              "type": "string"
            },
            "brand": {
              "index": "not_analyzed",
              "type": "string",
              "boost": 50,
              "fields": {
                "standard": {
                  "analyzer": "qm_standard",
                  "type": "string"
                }
              }
            },
            "images": {
              "index": "no",
              "type": "string"
            },
            "salePrice": {
              "precision_step": 4,
              "type": "double"
            },
            "props": {
              "properties": {
                "name": {
                  "index": "not_analyzed",
                  "type": "string"
                },
                "value": {
                  "index": "not_analyzed",
                  "type": "string",
                  "fields": {
                    "standard": {
                      "analyzer": "qm_standard",
                      "type": "string"
                    }
                  }
                }
              },
              "type": "nested"
            }
          },
          "_all": {
            "store": true,
            "analyzer": "qm_standard",
            "auto_boost": true
          }
        }
      }
    },
    "data_river": {
      "rivers": [
        {
          "name": "yun_not_edit",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "not",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"ids\":\"(?P<ids>[\\d\\D]+?)\""
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "dubbo",
            "host": "192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181",
	    "version": "1.0.0",
            "service_interface": "com.qianmi.pc.api.es.item.EsGoodsQueryProvider",
            "request": {
              "method": "listByIdString",
              "timeout": 10,
              "body": {
                "chainMasterId": "{adminID}",
                "idString": "{ids}"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "product",
              "operation": "create",
              "index": "qmshop-{adminId}-{version}",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "yun_edit_add",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"addSkuIds\":\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"addSkuIds\":\"(?P<ids>[\\d\\D]+?)\""
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "dubbo",
            "host": "192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181",
            "service_interface": "com.qianmi.pc.api.es.item.EsGoodsQueryProvider",
            "version": "1.0.0",
            "request": {
              "method": "listByIdString",
              "timeout": 10,
              "body": {
                "chainMasterId": "{adminID}",
                "idString": "{ids}"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "product",
              "operation": "create",
              "index": "qmshop-{adminId}-{version}",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "yun_edit_update",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"updateSkuIds\":\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"updateSkuIds\":\"(?P<ids>[\\d\\D]+?)\""
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "dubbo",
            "host": "192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181",
            "service_interface": "com.qianmi.pc.api.es.item.EsGoodsQueryProvider",
            "version": "1.0.0",
            "request": {
              "method": "listByIdString",
              "timeout": 10,
              "body": {
                "chainMasterId": "{adminID}",
                "idString": "{ids}"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "product",
              "operation": "create",
              "index": "qmshop-{adminId}-{version}",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "yun_edit_delete",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"deleteSkuIds\":\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"sys\":2"
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"deleteSkuIds\":\"(?P<ids>[\\d\\D]+?)\""
              }
            }
          },
          "source": {
            "type": "passthrough",
            "fields_reference": "fields"
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "product",
              "operation": "delete",
              "index": "qmshop-{adminID}-{version}",
              "id": "{ids}",
              "id_process": {
                "type": "seperate",
                "separator": ":"
              }
            }
          ]
        },
        {
          "name": "yun_init",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "queue": "q.qmpc.EsInit",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"sys\":2"
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "fromSys": "sys\":(?P<fromSys>[\\d]+?)"
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "dubbo",
            "host": "192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181",
            "service_interface": "com.qianmi.pc.api.es.item.EsGoodsQueryProvider",
            "version": "1.0.0",
            "request": {
              "method": "query",
              "timeout": 10,
              "body": {
                "chainMasterId": "{adminID}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "fromSys": "{fromSys}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "product",
              "operation": "create",
              "index": "qmshop-{adminId}-{version}",
              "id": "{skuId}",
              "clear_policy": "every_msg,all"
            }
          ]
        },
        {
          "name": "spu_yun_not_edit",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "not",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"ids\":\"(?P<ids>[\\d\\D]+?)\""
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "dubbo",
            "host": "192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181",
            "version": "1.0.0",
            "service_interface": "com.qianmi.pc.api.es.item.EsProductQueryProvider",
            "request": {
              "method": "listByIdString",
              "timeout": 10,
              "body": {
                "chainMasterId": "{adminID}",
                "idString": "{ids}"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu",
              "operation": "create",
              "index": "qmshop-{adminId}-{version}",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_yun_edit_add",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"addSkuIds\":\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"addSkuIds\":\"(?P<ids>[\\d\\D]+?)\""
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "dubbo",
            "host": "192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181",
            "service_interface": "com.qianmi.pc.api.es.item.EsProductQueryProvider",
            "version": "1.0.0",
            "request": {
              "method": "listByIdString",
              "timeout": 10,
              "body": {
                "chainMasterId": "{adminID}",
                "idString": "{ids}"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu",
              "operation": "create",
              "index": "qmshop-{adminId}-{version}",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_yun_edit_update",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":2)|(\"sys\":2[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"updateSkuIds\":\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"updateSkuIds\":\"(?P<ids>[\\d\\D]+?)\""
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "dubbo",
            "host": "192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181",
            "service_interface": "com.qianmi.pc.api.es.item.EsProductQueryProvider",
            "version": "1.0.0",
            "request": {
              "method": "listByIdString",
              "timeout": 10,
              "body": {
                "chainMasterId": "{adminID}",
                "idString": "{ids}"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu",
              "operation": "create",
              "index": "qmshop-{adminId}-{version}",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_yun_edit_delete",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"deleteSkuIds\":\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"sys\":2"
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_spuids_from_pc_mq_msg",
                  "input_param": {
                    "fields": {
                      "pc_ids": {
                        "type": "regex",
                        "expression": "\"ids\":\"(?P<pc_ids>[\\d\\D]+?)\""
                      },
                      "sep_char": {
                        "type": "fixed",
                        "expression": ","
                      }
                    }
                  }
                }
              }
            }
          },
          "source": {
            "type": "passthrough",
            "fields_reference": "fields"
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu",
              "operation": "delete",
              "id": "{ids}",
              "id_process": {
                "type": "seperate",
                "separator": ","
              }
            }
          ]
        },
        {
          "name": "spu_yun_init",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "queue": "q.qmpc.EsInit",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"sys\":2"
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "fromSys": "sys\":(?P<fromSys>[\\d]+?)"
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "dubbo",
            "host": "192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181",
            "service_interface": "com.qianmi.pc.api.es.item.EsProductQueryProvider",
            "version": "1.0.0",
            "request": {
              "method": "query",
              "timeout": 10,
              "body": {
                "chainMasterId": "{adminID}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "fromSys": "{fromSys}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "spu",
              "operation": "create",
              "index": "qmshop-{adminId}-{version}",
              "id": "{spuId}",
              "clear_policy": "every_msg,all"
            }
          ]
        },
        {
          "name": "sup_init",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmsup.category.operate",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "type": "regex",
                  "expression": "method=init"
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {}
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/supGoods/getSupGoodsInfoPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "create",
              "id": "{skuId}",
              "clear_policy": "every_msg,all"
            }
          ]
        },
        {
          "name": "sup_show_cate_update",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmsup.category.operate",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "type": "regex",
                  "expression": "method=update"
                },
                {
                  "type": "regex",
                  "expression": "oldCateId="
                },
                {
                  "type": "regex",
                  "expression": "cateId="
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "oldCateId": "oldCateId=(?P<oldCateId>[\\d\\D]+?),",
                "cateId": "cateId=(?P<cateId>[\\d\\D]+?)}"
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/supGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "oldCateId": "{oldCateId}",
                "cateId": "{cateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "update",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "sup_show_cate_delete",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmsup.category.operate",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "type": "regex",
                  "expression": "method=delete"
                },
                {
                  "type": "regex",
                  "expression": "cateId="
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "cateId": "cateId=(?P<cateId>[\\d\\D]+?)}"
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/supGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "cateId": "{cateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "update",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "sup_show_cate_add",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmsup.category.operate",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "type": "regex",
                  "expression": "method=add"
                },
                {
                  "type": "regex",
                  "expression": "cateId="
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "cateId": "cateId=(?P<cateId>[\\d\\D]+?)}"
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/supGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "cateId": "{cateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "update",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "sup_cate_update",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmsup.category.operate",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "type": "regex",
                  "expression": "method=update"
                },
                {
                  "type": "regex",
                  "expression": "oldCateId="
                },
                {
                  "type": "regex",
                  "expression": "cateId="
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "oldCateId": "oldCateId=(?P<oldCateId>[\\d\\D]+?),",
                "cateId": "cateId=(?P<cateId>[\\d\\D]+?)}"
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/supGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "oldCateId": "{oldCateId}",
                "cateId": "{cateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "update",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "sup_not_edit",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "not",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "skuIds": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_skuids_from_pc_mq_msg",
                  "input_param": {
                    "fields": {
                      "pc_ids": {
                        "type": "regex",
                        "expression": "\"ids\":\"(?P<pc_ids>[\\d\\D]+?)\""
                      },
                      "sep_char": {
                        "type": "fixed",
                        "expression": ","
                      }
                    }
                  }
                }
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/supGoods/getSupGoodsInfoList",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "skuIds": "{skuIds}",
                "adminId": "{adminID}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "create",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "sup_edit_add",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"addSkuIds\":\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"addSkuIds\":\"(?P<ids>[\\d\\D]+?)\"",
                "skuIds": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_skuids_from_pc_mq_msg",
                  "input_param": {
                    "fields": {
                      "pc_ids": {
                        "type": "regex",
                        "expression": "\"addSkuIds\":\"(?P<pc_ids>[\\d\\D]+?)\""
                      },
                      "sep_char": {
                        "type": "fixed",
                        "expression": ","
                      }
                    }
                  }
                }
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/supGoods/getSupGoodsInfoList",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "skuIds": "{skuIds}",
                "adminId": "{adminID}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "create",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "sup_edit_update",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"updateSkuIds\":\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"updateSkuIds\":\"(?P<ids>[\\d\\D]+?)\"",
                "skuIds": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_skuids_from_pc_mq_msg",
                  "input_param": {
                    "fields": {
                      "pc_ids": {
                        "type": "regex",
                        "expression": "\"updateSkuIds\":\"(?P<pc_ids>[\\d\\D]+?)\""
                      },
                      "sep_char": {
                        "type": "fixed",
                        "expression": ","
                      }
                    }
                  }
                }
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/supGoods/getSupGoodsInfoList",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "skuIds": "{skuIds}",
                "adminId": "{adminID}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "create",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "sup_edit_delete",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"deleteSkuIds\":\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"sys\":1"
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"deleteSkuIds\":\"(?P<ids>[\\d\\D]+?)\""
              }
            }
          },
          "source": {
            "type": "passthrough",
            "fields_reference": "fields"
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "delete",
              "id": "{ids}"
            }
          ]
        },
        {
          "name": "sup_standard_cate_update",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.standardCateChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"type\": \"update\"|\"type\": \"updateStatus\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "type": "\"type\":\"(?P<type>[\\d\\D]+?)\"",
                "parentCateId": "parentCateId\":\"(?P<parentCateId>[\\d\\D]+?)\"",
                "cateId": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_cateIds_from_standard_cate_update_msg"
                }
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/supGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "type": "{type}",
                "cateId": "{cateId}",
                "parentCateId": "{parentCateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "update",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "sup_standard_cate_delete",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.standardCateChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"type\": \"delete\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "type": "\"type\":\"(?P<type>[\\d\\D]+?)\"",
                "parentCateId": "parentCateId\":\"(?P<parentCateId>[\\d\\D]+?)\"",
                "cateId": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_cateIds_from_standard_cate_update_msg"
                }
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/supGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "type": "{type}",
                "cateId": "{cateId}",
                "parentCateId": "{parentCateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_product",
              "operation": "update",
              "id": "{skuId}"
            }
          ]
        },
        {
          "name": "spu_sup_init",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmsup.category.operate",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "type": "regex",
                  "expression": "method=init"
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {}
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/gonghuoGoods/getSupGoodsInfoPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "create",
              "id": "{spuId}",
              "clear_policy": "every_msg,all"
            }
          ]
        },
        {
          "name": "spu_sup_show_cate_update",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmsup.category.operate",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "type": "regex",
                  "expression": "method=update"
                },
                {
                  "type": "regex",
                  "expression": "oldCateId="
                },
                {
                  "type": "regex",
                  "expression": "cateId="
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "oldCateId": "oldCateId=(?P<oldCateId>[\\d\\D]+?),",
                "cateId": "cateId=(?P<cateId>[\\d\\D]+?)}"
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/gonghuoGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "oldCateId": "{oldCateId}",
                "cateId": "{cateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "update",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_sup_show_cate_delete",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmsup.category.operate",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "type": "regex",
                  "expression": "method=delete"
                },
                {
                  "type": "regex",
                  "expression": "cateId="
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "cateId": "cateId=(?P<cateId>[\\d\\D]+?)}"
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/gonghuoGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "cateId": "{cateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "update",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_sup_show_cate_add",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmsup.category.operate",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "type": "regex",
                  "expression": "method=add"
                },
                {
                  "type": "regex",
                  "expression": "cateId="
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "cateId": "cateId=(?P<cateId>[\\d\\D]+?)}"
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/gonghuoGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "cateId": "{cateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "update",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_sup_cate_update",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmsup.category.operate",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "type": "regex",
                  "expression": "method=update"
                },
                {
                  "type": "regex",
                  "expression": "oldCateId="
                },
                {
                  "type": "regex",
                  "expression": "cateId="
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "oldCateId": "oldCateId=(?P<oldCateId>[\\d\\D]+?),",
                "cateId": "cateId=(?P<cateId>[\\d\\D]+?)}"
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/gonghuoGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "oldCateId": "{oldCateId}",
                "cateId": "{cateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "update",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_sup_not_edit",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "not",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "spuIds": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_spuids_from_pc_mq_msg",
                  "input_param": {
                    "fields": {
                      "pc_ids": {
                        "type": "regex",
                        "expression": "\"ids\":\"(?P<pc_ids>[\\d\\D]+?)\""
                      },
                      "sep_char": {
                        "type": "fixed",
                        "expression": ","
                      }
                    }
                  }
                }
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/gonghuoGoods/getSupGoodsInfoList",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "spuIds": "{spuIds}",
                "adminId": "{adminID}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "create",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_sup_edit_add",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"addSkuIds\":\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"addSkuIds\":\"(?P<ids>[\\d\\D]+?)\"",
                "spuIds": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_spuids_from_pc_mq_msg",
                  "input_param": {
                    "fields": {
                      "pc_ids": {
                        "type": "regex",
                        "expression": "\"addSkuIds\":\"(?P<pc_ids>[\\d\\D]+?)\""
                      },
                      "sep_char": {
                        "type": "fixed",
                        "expression": ","
                      }
                    }
                  }
                }
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/gonghuoGoods/getSupGoodsInfoList",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "spuIds": "{spuIds}",
                "adminId": "{adminID}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "create",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_sup_edit_update",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "(\"type\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"add\")|(\"update\":\"add\"[\\d\\D]*\"sys\":1)|(\"sys\":1[\\d\\D]*\"type\":\"update\")"
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"operation\":\"edit\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"updateSkuIds\":\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": "\"updateSkuIds\":\"(?P<ids>[\\d\\D]+?)\"",
                "spuIds": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_spuids_from_pc_mq_msg",
                  "input_param": {
                    "fields": {
                      "pc_ids": {
                        "type": "regex",
                        "expression": "\"updateSkuIds\":\"(?P<pc_ids>[\\d\\D]+?)\""
                      },
                      "sep_char": {
                        "type": "fixed",
                        "expression": ","
                      }
                    }
                  }
                }
              }
            }
          },
          "source": {
            "type": "get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/gonghuoGoods/getSupGoodsInfoList",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "spuIds": "{spuIds}",
                "adminId": "{adminID}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "create",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_sup_edit_delete",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.ItemChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"deleteSkuIds\":\""
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"sys\":1"
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "adminID": "chainMasterId\":\"(?P<adminID>[\\d\\D]+?)\"",
                "ids": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_spuids_from_pc_mq_msg",
                  "input_param": {
                    "fields": {
                      "pc_ids": {
                        "type": "regex",
                        "expression": "\"ids\":\"(?P<pc_ids>[\\d\\D]+?)\""
                      },
                      "sep_char": {
                        "type": "fixed",
                        "expression": ","
                      }
                    }
                  }
                }
              }
            }
          },
          "source": {
            "type": "passthrough",
            "fields_reference": "fields"
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "delete",
              "id": "{ids}"
            }
          ]
        },
        {
          "name": "spu_sup_standard_cate_update",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.standardCateChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"type\": \"update\"|\"type\": \"updateStatus\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "type": "\"type\":\"(?P<type>[\\d\\D]+?)\"",
                "parentCateId": "parentCateId\":\"(?P<parentCateId>[\\d\\D]+?)\"",
                "cateId": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_cateIds_from_standard_cate_update_msg"
                }
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/gonghuoGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "type": "{type}",
                "cateId": "{cateId}",
                "parentCateId": "{parentCateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "update",
              "id": "{spuId}"
            }
          ]
        },
        {
          "name": "spu_sup_standard_cate_delete",
          "notification": {
            "type": "MQ",
            "host": "failover:(tcp://192.168.65.182:61616,tcp://192.168.65.181:61616,tcp://192.168.65.180:61616)?randomize=false",
            "topic": "t.qmpc.standardCateChange",
            "filter": {
              "union_operator": "and",
              "msg_type": "TextMessage",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "expression": "\"type\": \"delete\""
                }
              ]
            },
            "data_parser": {
              "type": "regex",
              "fields": {
                "type": "\"type\":\"(?P<type>[\\d\\D]+?)\"",
                "parentCateId": "parentCateId\":\"(?P<parentCateId>[\\d\\D]+?)\"",
                "cateId": {
                  "type": "script",
                  "language": "python",
                  "obj_path": "script_data_parsers.parse_cateIds_from_standard_cate_update_msg"
                }
              }
            }
          },
          "source": {
            "type": "iterator_get",
            "protocol": "http",
            "host": "oss.gonghuo.com",
            "request": {
              "url": "/gonghuoGoods/getSupGoodsInfoByCatIdsPagination",
              "http_method": "POST",
              "body": {
                "version": "{version}",
                "pageNum": "{page_from}",
                "pageSize": "{page_size}",
                "type": "{type}",
                "cateId": "{cateId}",
                "parentCateId": "{parentCateId}"
              }
            },
            "response": {
              "fields": {
                "total": "totalCount",
                "data": "dataList"
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch",
              "reference": "gonghuo_spu",
              "operation": "update",
              "id": "{spuId}"
            }
          ]
        }
      ]
    },
    "query": {
      "chain": [
        {
          "name": "sup_product_query",
          "res_type": "product",
          "http_method": "GET,PUT,POST,DELETE",
          "url_format": "^products/gonghuo/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/products/gonghuo"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "gonghuo_product"
          },
          "response": {
            "json": {
              "format": "json",
              "data_parser": {
                "language": "python",
                "script": "script.python.data_parser"
              }
            }
          }
        },
        {
          "name": "yun_product_query",
          "res_type": "product",
          "http_method": "GET,PUT,POST,DELETE",
          "url_format": "^products/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/products/[\\d\\D]+"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "adminID": "products/(?P<adminID>[\\d\\D]+)",
              "ids": "ids=(?P<ids>[\\d\\D]+?);"
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "product"
          },
          "response": {
            "json": {
              "format": "json",
              "data_parser": {
                "language": "python",
                "script": "script.python.data_parser"
              }
            }
          }
        },
        {
          "name": "yun_spu_query",
          "res_type": "product",
          "http_method": "GET,PUT,POST,DELETE",
          "url_format": "^spus/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/spus/[\\d\\D]+"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "adminID": "spus/(?P<adminID>[\\d\\D]+)"
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "spu"
          }
        },
        {
          "name": "sup_product_aggregation",
          "res_type": "aggregation",
          "http_method": "GET",
          "url_format": "^aggregations/gonghuo/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/aggregations/gonghuo"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "gonghuo_product"
          },
          "response": {
            "json": {
              "format": "json",
              "data_parser": {
                "language": "python",
                "script": "script.python.data_parser"
              }
            }
          }
        },
        {
          "name": "yun_product_aggregation",
          "res_type": "aggregation",
          "http_method": "GET",
          "url_format": "^aggregations/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/aggregations/[\\d\\D]+"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "adminID": "aggregations/(?P<adminID>[\\d\\D]+)",
              "ids": "ids=(?P<ids>[\\d\\D]+?);"
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "product"
          },
          "response": {
            "json": {
              "format": "json",
              "data_parser": {
                "language": "python",
                "script": "script.python.data_parser"
              }
            }
          }
        },
        {
          "name": "yun_spu_aggregation",
          "res_type": "aggregation",
          "http_method": "GET",
          "url_format": "^spu_aggregations/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/spu_aggregations/[\\d\\D]+"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "adminID": "spu_aggregations/(?P<adminID>[\\d\\D]+)"
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "spu"
          }
        },
        {
          "name": "yun_product_suggest",
          "res_type": "suggest",
          "http_method": "GET",
          "url_format": "^suggests/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/suggests/[^/]+$"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "adminID": "suggests/(?P<adminID>[\\d\\D]+)"
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "suggest"
          },
          "response": {
            "json": {
              "format": "json",
              "data_parser": {
                "language": "python",
                "script": "script.python.data_parser"
              }
            }
          }
        },
        {
          "name": "sup_product_search",
          "res_type": "search",
          "http_method": "GET",
          "url_format": "^search/gonghuo/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/search/gonghuo"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "gonghuo_product"
          },
          "response": {
            "json": {
              "format": "json",
              "data_parser": {
                "language": "python",
                "script": "script.python.data_parser"
              }
            }
          }
        },
        {
          "name": "yun_product_search",
          "res_type": "search",
          "http_method": "GET",
          "url_format": "^search/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/search/[\\d\\D]+"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "adminID": "search/(?P<adminID>[\\d\\D]+)"
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "product"
          },
          "response": {
            "json": {
              "format": "json",
              "data_parser": {
                "language": "python",
                "script": "script.python.data_parser"
              }
            }
          }
        },
        {
          "name": "yun_spu_search",
          "res_type": "search",
          "http_method": "GET",
          "url_format": "^spu_search/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/spu_search/[\\d\\D]+"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "adminID": "spu_search/(?P<adminID>[\\d\\D]+)"
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "spu"
          },
          "response": {
            "json": {
              "format": "json",
              "data_parser": {
                "language": "python",
                "script": "script.python.data_parser"
              }
            }
          }
        },
        {
          "name": "stats_search",
          "res_type": "measure",
          "http_method": "GET",
          "url_format": "^stats/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/stats/[\\d\\D]+"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "index": "stats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)",
              "task_name": "stats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)"
            }
          }
        },
        {
          "name": "exstats_search",
          "res_type": "ex_measure",
          "http_method": "GET",
          "url_format": "^exstats/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/exstats/[\\d\\D]+"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "index": "exstats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)",
              "task_name": "exstats/(?P<index>[\\d\\w\\-.]+?)/(?P<task_name>[\\d\\w\\-.^/]+)"
            }
          }
        },
        {
          "name": "ex_suggest",
          "res_type": "ex_suggest",
          "http_method": "GET",
          "url_format": "^suggests/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/suggests/[\\d\\D]+?/scenes/[\\d\\D]+"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "adminID": "/suggests/(?P<adminID>[\\d\\D]+?)/scenes",
              "scene": "/scenes/(?P<scene>[\\d\\D]+)"
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "suggest"
          }
        },
        {
          "name": "recommendation",
          "res_type": "recommendation",
          "http_method": "GET",
          "url_format": "^recommendations/[\\d\\D]+",
          "filter": {
            "type": "regex",
            "union_operator": "and",
            "conditions": [
              {
                "operator": "is",
                "type": "regex",
                "field": "url",
                "expression": "/recommendations/[\\d\\D]+?/scenes/[\\d\\D]+"
              }
            ]
          },
          "data_parser": {
            "type": "regex",
            "fields": {
              "adminID": "/recommendations/(?P<adminID>[\\d\\D]+?)/scenes",
              "scene": "/scenes/(?P<scene>[\\d\\D]+)"
            }
          },
          "destination": {
            "destination_type": "elasticsearch",
            "reference": "product"
          }
        }
      ]
    },
    "suggest": {
      "rivers": [
        {
          "name": "yun_product_suggest_task",
          "notification": {
            "type": "elasticsearch_regularly_scan",
            "crontab": {
              "second": "0",
              "minute": "53",
              "hour": "0"
            },
            "host": "http://172.19.66.5:9200",
            "filter": {
              "type": "es_regex",
              "union_operator": "and",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "field": "index",
                  "expression": "^qmshop-[\\d\\D]*"
                },
                {
                  "operator": "is",
                  "type": "regex",
                  "field": "type",
                  "expression": "^Product$"
                }
              ]
            }
          },
          "source": {
            "type": "iterator_es_get",
            "size": 50,
            "data_parser": {
              "type": "map",
              "keyword_filter_regex": "^[一-龥A-Za-z0-9]{2,}$",
              "fields": {
                "title": "title",
                "brand": "brand",
                "category": "type"
              }
            },
            "param_parser": {
              "type": "regex",
              "fields": {
                "adminID": {
                  "field": "index",
                  "type": "regex",
                  "expression": "^qmshop-(?P<adminID>[\\d\\D]+?)-"
                }
              }
            },
            "tags": {
              "default": "{\"term\": {\"onSale\": true}}",
              "d2p": {
                "bool": {
                  "must": [
                    {"term": {"D2POnSale": true}},
                    {"term": {"sys": 2}},
                    {
                      "nested": {
                        "path": "cats",
                        "query": {"term": {"cats.name": "b2b"}}
                      }
                    },
                    {
                      "nested": {
                        "path": "stock",
                        "query": {"range": {"stock.stock": {"gte": 1}}}
                      }
                    }
                  ]
                }
              },
              "d2c": {
                "bool": {
                  "must": [
                    {"term": {"D2COnSale": true}},
                    {"term": {"sys": 2}},
                    {"term": {"productLine": 2}}
                  ]
                }
              }
            }
          },
          "processing": {
            "type": "basic_processing",
            "output": {
              "weight": {
                "type": "script",
                "language": "mvel",
                "script": "ctx._source.suggest.weight = round(ctx._source.suggest.weight*0.5 + 0.5*current_weight)",
                "param": {
                  "type": "math_expression",
                  "fields": {
                    "current_weight": "int((hits['default']*0.25 + source_type_weight)/2)"
                  }
                }
              },
              "payloads": {
                "type": "map",
                "fields": {
                  "source_type": "source_type",
                  "hits": "hits"
                }
              },
              "common_fields": {
                "type": "map",
                "fields": {
                  "source_type": "source_type",
                  "id": "id"
                }
              }
            }
          },
          "destination": [
            {
              "destination_type": "elasticsearch_processed",
              "reference": "suggest",
              "operation": "create"
            }
          ]
        }
      ]
    },
    "consts": {
      "global": {
        "query_min_score": 1,
        "agg_size": 500,
        "query_size": {
          "from": {
            "min": 0,
            "max": 6000,
            "default": 0
          },
          "size": {
            "min": 0,
            "max": 200,
            "default": 60
          },
          "suggest_size": {
            "min": 0,
            "max": 50,
            "default": 10
          },
          "like_str_size": {
            "min": 0,
            "max": 20,
            "default": 10
          }
        },
        "ansj_segment_redis": {
          "host": "localhost:6379",
          "channel": "ansj_term"
        },
        "lock_expire_time": 1800,
        "algorithm": {
          "price_section_num": 6,
          "section_range_rate": 20,
          "price_section_opt_range": [
            10,
            20,
            30,
            50,
            100
          ],
          "optimize": true,
          "like_string_suggest_size": 10,
          "like_string_fuzzy_size": 10,
          "content_based_recom": {
            "vectors": {
              "brand": {"weight": 1},
              "salePrice": {
                "weight": 1,
                "type": "range"
              },
              "salePoint": {"weight": 1},
              "tags": {"weight": 1},
              "spuId": {"weight": 1},
              "props": {
                "weight": 1,
                "type": "nest"
              },
              "title": {"weight": 0.5},
              "cats": {
                "type": "cats",
                "weight": 1
              }
            },
            "recommend": {
              "size": 5,
              "min_cosine_similarity": 0.5,
              "candidate_multiple": 3,
              "type_query_size": 5000
            }
          }
        }
      },
      "query": {
        "orders": {
          "1": "asc",
          "0": "desc"
        },
        "scroll_time": "1m",
        "agg_cats_default_depth": 2,
        "default_index": "sp_reserve_index",
        "query_string": {
          "default": "match_selected_fields",
          "match_all": {
            "analyzer": "qm_standard",
            "fields": "_all"
          },
          "match_selected_fields": {
            "analyzer": "qm_standard",
            "fields": {
              "normal": [
                "tags",
                "type.standard",
                "salePoint",
                "title.standard",
                "brand.standard"
              ],
              "nest": {
                "props.value.standard": {
                  "field": "props",
                  "level": 0
                },
                "cats.name.standard": {
                  "field": "cats",
                  "level": 0
                },
                "cats.childs.name.standard": {
                  "field": "cats",
                  "level": 1,
                  "path": "childs"
                },
                "cats.childs.childs.name.standard": {
                  "field": "cats",
                  "level": 2,
                  "path": "childs"
                },
                "cats.childs.childs.childs.name.standard": {
                  "field": "cats",
                  "level": 3,
                  "path": "childs"
                }
              }
            }
          },
          "score": {
            "fields": "_all",
            "query_type": "query_string",
            "boost": 1.5
          }
        }
      },
      "notification": {
        "mq_reconnect_time": 30,
        "mq_client_id": "search_platform"
      },
      "filter": {
        "default_match_result": "true"
      },
      "source": {
        "default_iteration_get_size": 50
      },
      "suggest": {
        "default_es_iterator_get_size": 100,
        "source_type": {
          "1": 1,
          "2": 10
        },
        "tag_query_multiple": 10
      },
      "manager": {
        "default": {
          "supervisor_port": "9001",
          "supervisor_user": "user",
          "supervisor_password": "123"
        },
        "hosts": [
          {
            "host": "172.17.8.199",
            "supervisor_port": "9001",
            "supervisor_user": "user",
            "supervisor_password": "123"
          },
          {
            "host": "172.17.8.105",
            "supervisor_port": "9001",
            "supervisor_user": "user",
            "supervisor_password": "123"
          }
        ],
        "message": {
          "es_store": {
            "index": "sp_search_platform_msg",
            "type": "message"
          }
        }
      },
      "logger": {
        "debug": {
          "level": "DEBUG"
        },
        "interface": {
          "level": "INFO"
        },
        "app": {
          "level": "INFO"
        },
        "query": {
          "level": "INFO"
        }
      },
      "measure": {
        "es": {
          "task": {
            "index": "sp_measure-{year}-{version}",
            "type": "{task_name}",
            "id": "{time_stamp}"
          },
          "sample": {
            "index": "sp_measure_sample-{year}-{version}",
            "type": "{task_name}",
            "id": "{time_stamp}"
          }
        },
        "save_sample_data": true
      }
    },
    "measure": {
      "measure_unit": [
        {
          "name": "es_index_stats",
          "measure_obj": {
            "type": "es_index"
          },
          "measurements": [
            {
              "name": "doc_count",
              "type": "elasticsearch",
              "operation": "search",
              "search_type": "count",
              "dsl": "",
              "calculate_policy": "max",
              "data_type": "int"
            },
            {
              "name": "doc_count_increment",
              "type": "elasticsearch",
              "operation": "search",
              "search_type": "count",
              "dsl": "",
              "calculate_policy": "sub",
              "data_type": "int"
            },
            {
              "name": "storage_size",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/store/size_in_bytes",
              "calculate_policy": "max"
            },
            {
              "name": "index_current",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/indexing/index_total",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "index_time",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/indexing/index_time_in_millis",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "delete_current",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/indexing/delete_total",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "delete_time",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/indexing/delete_time_in_millis",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "get_current",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/get/total",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "get_time",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/get/time_in_millis",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "search_current",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/search/query_total",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "search_time",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/search/query_time_in_millis",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "suggest_current",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/suggest/total",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "suggest_time",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/suggest/time_in_millis",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "warmer_current",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/warmer/total",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "warmer_time",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/warmer/total_time_in_millis",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "refresh_current",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/refresh/total",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "refresh_time",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/refresh/total_time_in_millis",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "flush_current",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/flush/total",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            },
            {
              "name": "flush_time",
              "type": "elasticsearch",
              "operation": "stats",
              "value_field": "/primaries/flush/total_time_in_millis",
              "calculate_policy": "sub",
              "collect_policy": "sum"
            }
          ]
        },
        {
          "name": "spu_stats",
          "measure_obj": {
            "type": "es_index"
          },
          "measurements": [
            {
              "name": "spu_count",
              "type": "elasticsearch",
              "operation": "search",
              "search_type": "aggs",
              "dsl": {"aggs": {"spu_count": {"cardinality": {"field": "spuId"}}}},
              "value_field": "/aggregations/spu_count/value",
              "calculate_policy": "max",
              "data_type": "int"
            },
            {
              "name": "spu_count_increment",
              "type": "elasticsearch",
              "operation": "search",
              "search_type": "aggs",
              "dsl": {"aggs": {"spu_count": {"cardinality": {"field": "spuId"}}}},
              "value_field": "/aggregations/spu_count/value",
              "calculate_policy": "sub",
              "data_type": "int"
            }
          ]
        }
      ],
      "measure_task": [
        {
          "name": "index_stats",
          "measure_unit_name": "es_index_stats",
          "measure_obj": {
            "host": "",
            "filter": {
              "union_operator": "and",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "field": "index",
                  "expression": "qmshop-[\\d\\D]+"
                }
              ]
            }
          },
          "period": {
            "type": "interval",
            "sample_period": {"minutes": 60},
            "measure_period": {"minutes": 60}
          },
          "save_sample_data": true
        },
        {
          "name": "spu_stats",
          "measure_unit_name": "spu_stats",
          "measure_obj": {
            "host": "",
            "filter": {
              "union_operator": "and",
              "conditions": [
                {
                  "operator": "is",
                  "type": "regex",
                  "field": "index",
                  "expression": "qmshop-[\\d\\D]+"
                }
              ]
            }
          },
          "period": {
            "type": "interval",
            "sample_period": {"minutes": 60},
            "measure_period": {"minutes": 60}
          },
          "save_sample_data": true
        }
      ]
    }
  }
}